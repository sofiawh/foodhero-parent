version: '3.1'

services:
  foodhero-discovery-service:
    build: ./discovery
    container_name: foodhero-discovery-service
    ports:
      - '8761:8761'
    expose:
      - '8761'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      retries: 4

  foodhero-association-service:
    build: ./association-service
    container_name: foodhero-association-service
    ports:
      - '9195:9195'
    expose:
      - '9195'
    environment:
      - DISCOVERY_SERVICE_URL=http://foodhero-discovery-service:8761/eureka
  foodhero-user-service:
    build: ./user-service
    container_name: foodhero-user-service
    ports:
      - '9192:9192'
    expose:
      - '9192'
    environment:
      - DISCOVERY_SERVICE_URL=http://foodhero-discovery-service:8761/eureka
  #   depends_on:
  #    et-c-service:
  #     condition: service_healthy
  foodhero-donation-service:
    build: ./donation-service
    container_name: foodhero-donation-service
    ports:
      - '9194:9194'
    expose:
      - '9194'
    environment:
      - DISCOVERY_SERVICE_URL=http://foodhero-discovery-service:8761/eureka
  foodhero-commercant-service:
    build: ./merchant-service
    container_name: foodhero-commercant-service
    ports:
      - '9193:9193'
    expose:
      - '9193'
    environment:
      - DISCOVERY_SERVICE_URL=http://foodhero-discovery-service:8761/eureka
  foodhero-enrollment-service:
    build: ./enrollment
    container_name: foodhero-enrollment-service
    ports:
      - '8071:8071'
    expose:
      - '8071'
    environment:
      - DISCOVERY_SERVICE_URL=http://foodhero-discovery-service:8761/eureka
  foodhero-config-service:
    build: ./config-service
    container_name: foodhero-config-service
    ports:
      - '8888:8888'
    expose:
      - '8888'
    environment:
      - DISCOVERY_SERVICE_URL=http://foodhero-discovery-service:8761/eureka
  foodhero-gateway-service:
    build: ./gateway
    container_name: foodhero-gateway-service
    ports:
      - '8222:8222'
    expose:
      - '8222'
    environment:
      - DISCOVERY_SERVICE_URL=http://foodhero-discovery-service:8761/eureka
  #   depends_on:
  #    enset-ebank-config-service:
  #     condition: service_healthy








  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1




#  zipkin:
#    container_name: zipkin
#    image: openzipkin/zipkin
#    ports:
#      - "9411:9411"
#    networks:
#      - zipkin
#
#  networks:
#    zipkin:
#      driver: bridge


  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.2
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    networks:
      - postgres
    restart: unless-stopped

  postgresql:
    container_name: postgresql2
    image: postgres
    environment:
      POSTGRES_USER: sofia
      POSTGRES_PASSWORD: sofia
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin2
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  zipkin:
    container_name: zipkinF
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - zipkin

networks:
  postgres:
    driver: bridge
  zipkin:
    driver: bridge

volumes:
  postgres:
  pgadmin: